name: Build OS Image & Publish Kickstart

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '11 17 * * 0'
  workflow_dispatch:

permissions:
  contents: read    # To checkout the repository
  packages: write   # To push container images to GHCR
  pages: write      # To deploy to GitHub Pages
  id-token: write   # Required for OIDC with GitHub Pages deployment

jobs:
  prepare-build:
    name: Prepare Build
    runs-on: ubuntu-latest
    outputs:
      hosts: ${{ steps.prep.outputs.hosts }}
      matrix: ${{ steps.prep.outputs.matrix }}
    steps:
      - name: Generate Matrix Configuration
        id: prep
        run: |
          # Single source of truth for the host list
          hosts='["cherry", "cyprus", "dogwood", "elm"]'
          echo "hosts=${hosts}" >> $GITHUB_OUTPUT

          # Generate the full matrix for other jobs to consume
          IMAGE_OWNER_LOWER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          REPO_NAME_LOWER=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')

          # Use jq to construct the JSON for the matrix strategy
          matrix=$(jq -n --argjson hosts "$hosts" \
                          --arg owner "$IMAGE_OWNER_LOWER" \
                          --arg repo "$REPO_NAME_LOWER" \
                          --arg sha "${{ github.sha }}" \
                          '{"include": [
                             $hosts[] | {
                               host: .,
                               image_name: "ghcr.io/\($owner)/\($repo)-\(.)",
                               tags: "ghcr.io/\($owner)/\($repo)-\(.):latest,ghcr.io/\($owner)/\($repo)-\(.):\($sha)"
                             }
                           ]}')

          # Use a heredoc to safely output the multi-line JSON string
          echo "matrix<<EOF" >> $GITHUB_OUTPUT
          echo "$matrix" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  build-base-image:
    name: Build Base Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Container Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Containerfile
          target: base
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build Container Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Containerfile
          target: headless
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-and-publish-image:
    name: Build and Publish Host Images
    runs-on: ubuntu-latest
    needs: [build-base-image, prepare-build]
    strategy:
      matrix: ${{ fromJSON(needs.prepare-build.outputs.matrix) }}
    steps:
      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image for ${{ matrix.host }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Containerfile
          target: ${{ matrix.host }}
          push: true
          tags: ${{ matrix.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  publish-kickstart:
    name: Publish Kickstart Files to GitHub Pages
    runs-on: ubuntu-latest
    needs: [build-and-publish-image, prepare-build]
    strategy:
      matrix: ${{ fromJSON(needs.prepare-build.outputs.matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create directory for Kickstart files
        run: mkdir -p ./kickstart_files

      - name: Generate Kickstart file for ${{ matrix.host }}
        run: |
          # The image path is now taken directly from the matrix
          GHCR_IMAGE_PATH="${{ matrix.image_name }}:latest"
          echo "Generating Kickstart for ${{ matrix.host }} with image: ${GHCR_IMAGE_PATH}"

          # Create a host-specific kickstart file from the template
          cp default.ks ./kickstart_files/${{ matrix.host }}.ks

          # Substitute the placeholder with the actual image path
          sed -i "s|%%GHCR_IMAGE_PATH%%|${GHCR_IMAGE_PATH}|g" ./kickstart_files/${{ matrix.host }}.ks

          echo "Updated ${{ matrix.host }}.ks content:"
          cat ./kickstart_files/${{ matrix.host }}.ks

      - name: Upload Kickstart artifact for ${{ matrix.host }}
        uses: actions/upload-artifact@v4
        with:
          name: kickstart-files-${{ matrix.host }}
          path: ./kickstart_files/${{ matrix.host }}.ks

  deploy-kickstarts:
      name: Deploy all Kickstart files to GitHub Pages
      runs-on: ubuntu-latest
      needs: publish-kickstart
      steps:
        - name: Setup GitHub Pages
          uses: actions/configure-pages@v4

        - name: Download all Kickstart artifacts
          uses: actions/download-artifact@v4
          with:
            pattern: kickstart-files-*
            path: ./pages/

        - name: Upload Pages artifact
          uses: actions/upload-pages-artifact@v3
          with:
            path: ./pages/

        - name: Deploy to GitHub Pages
          id: deployment
          uses: actions/deploy-pages@v4

  notify-urls:
    name: Notify Kickstart URLs
    runs-on: ubuntu-latest
    needs: [deploy-kickstarts, prepare-build]
    if: success()
    strategy:
      matrix:
        host: ${{ fromJSON(needs.prepare-build.outputs.hosts) }}
    steps:
      - name: Echo Kickstart URL for ${{ matrix.host }}
        run: |
          REPO_NAME_LOWER=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
          KICKSTART_URL="https://${{ github.repository_owner }}.github.io/${REPO_NAME_LOWER}/${{ matrix.host }}.ks"
          echo "Kickstart for ${{ matrix.host }} is deploying to: ${KICKSTART_URL}"
